__kernel void forward(const unsigned int size,
 __global const float *input,
 __global const float *weights,
 __global const float *bias,
 __global float *output,
 const unsigned int act)
{
  int i = get_global_id(0);
  output[i] = bias[i];

  for (int k = 0; k < size; k++) {
    output[i] += input[k]*weights[i*size + k];
  }

  if (act == 0) {
    if (output[i] < 0)
      output[i] = 0;
    else
      output[i] = 1;
  }
  else if (act == 2) {
    output[i] = 1 / (1 + exp(-output[i]));
  }
  else if (act == 3) {
    output[i] = tanh(output[i]);
  }
  else if (act == 4) {
    if (output[i] < 0)
      output[i] = 0;
  }
  else if (act == 5) {
    if (output[i] < 0)
      output[i] = 0.01*output[i];
  }
  else if (act == 6) {
     output[i] = exp(output[i]);
  }
}